<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-30T06:21:08 WIB" name="Surefire suite" finished-at="2024-03-30T06:21:41 WIB" duration-ms="32991">
    <groups>
    </groups>
    <test started-at="2024-03-30T06:21:08 WIB" name="Surefire test" finished-at="2024-03-30T06:21:41 WIB" duration-ms="32991">
      <class name="CheckoutTest">
        <test-method is-config="true" signature="startReport()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:08 WIB" name="startReport" finished-at="2024-03-30T06:21:08 WIB" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:08 WIB" name="setUp" finished-at="2024-03-30T06:21:16 WIB" duration-ms="7933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initPages()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:16 WIB" name="initPages" finished-at="2024-03-30T06:21:16 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="testCheckoutWithInvalidCard()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:16 WIB" name="testCheckoutWithInvalidCard" finished-at="2024-03-30T06:21:19 WIB" duration-ms="2908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutWithInvalidCard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:19 WIB" name="getResult" finished-at="2024-03-30T06:21:19 WIB" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutWithInvalidCard status=SUCCESS method=CheckoutTest.testCheckoutWithInvalidCard()[pri:0, instance:CheckoutTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:19 WIB" name="setUp" finished-at="2024-03-30T06:21:26 WIB" duration-ms="7012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initPages()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:26 WIB" name="initPages" finished-at="2024-03-30T06:21:26 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="testSuccessfulCheckout()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:26 WIB" name="testSuccessfulCheckout" finished-at="2024-03-30T06:21:33 WIB" duration-ms="7041" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[TypeError: browsingContext.currentWindowGlobal is null
Build info: version: '4.19.0', revision: '5f9cec8963'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '13.4.1', java.version: '11.0.22'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [a30bfbc3-028b-4c5f-803d-d4b38c7fee47, findElement {value=//div[@class='notification-wrapper'], using=xpath}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 102.15.1, moz:accessibilityChecks: false, moz:buildID: 20230912014407, moz:debuggerAddress: localhost:14230, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 93439, moz:profile: /var/folders/9p/1z4y75457f1..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, platformVersion: 22.5.0, proxy: Proxy(), se:cdp: ws://localhost:14230/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a30bfbc3-028b-4c5f-803d-d4b38c7fee47]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: TypeError: browsingContext.currentWindowGlobal is null
Build info: version: '4.19.0', revision: '5f9cec8963'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '13.4.1', java.version: '11.0.22'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [a30bfbc3-028b-4c5f-803d-d4b38c7fee47, findElement {value=//div[@class='notification-wrapper'], using=xpath}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 102.15.1, moz:accessibilityChecks: false, moz:buildID: 20230912014407, moz:debuggerAddress: localhost:14230, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 93439, moz:profile: /var/folders/9p/1z4y75457f1..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, platformVersion: 22.5.0, proxy: Proxy(), se:cdp: ws://localhost:14230/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a30bfbc3-028b-4c5f-803d-d4b38c7fee47
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at PaymentPage.getTransactionStatus(PaymentPage.java:50)
at CheckoutTest.testSuccessfulCheckout(CheckoutTest.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulCheckout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:33 WIB" name="getResult" finished-at="2024-03-30T06:21:33 WIB" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulCheckout status=FAILURE method=CheckoutTest.testSuccessfulCheckout()[pri:0, instance:CheckoutTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:33 WIB" name="setUp" finished-at="2024-03-30T06:21:39 WIB" duration-ms="6150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test_1()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:39 WIB" name="test_1" finished-at="2024-03-30T06:21:39 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="initPages()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:39 WIB" name="initPages" finished-at="2024-03-30T06:21:39 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:39 WIB" name="getResult" finished-at="2024-03-30T06:21:39 WIB" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_1 status=SUCCESS method=CheckoutTest.test_1()[pri:0, instance:CheckoutTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CheckoutTest@31304f14]" started-at="2024-03-30T06:21:39 WIB" name="tearDown" finished-at="2024-03-30T06:21:41 WIB" duration-ms="1420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckoutTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
